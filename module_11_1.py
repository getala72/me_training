
# Выберите одну или несколько сторонних библиотек Python, например, requests, pandas, numpy, matplotlib, pillow.
# После выбора библиотек(-и) изучите документацию к ней(ним), ознакомьтесь с их основными возможностями и функциями. К каждой библиотеке дана ссылка на документацию ниже.
# Если вы выбрали:

# requests - запросить данные с сайта и вывести их в консоль.
# pandas - считать данные из файла, выполнить простой анализ данных (на своё усмотрение) и вывести результаты в консоль.
# numpy - создать массив чисел, выполнить математические операции с массивом и вывести результаты в консоль.
# matplotlib - визуализировать данные с помощью библиотеки любым удобным для вас инструментом из библиотеки.
# pillow - обработать изображение, например, изменить его размер, применить эффекты и сохранить в другой формат.
# В приложении к ссылке на GitHub напишите комментарий о возможностях, которые предоставила вам выбранная библиотека и как вы расширили возможности Python с её помощью.

# Примечания:

# Можете выбрать не более 3-х библиотек для изучения.
# Желательно продемонстрировать от 3-х функций/классов/методов/операций из каждой выбранной библиотеки.

import requests 
from time import sleep
import pandas as pd
import numpy as np
from random import randint

def requests_tack():
    response=requests.get('https://pypi.org/project/pip/')
    print(response.status_code)
    sleep(1)
    print(response.apparent_encoding)
    sleep(1)
    print(response.url)
    sleep(1)
  

def numpy_tack():
  a=np.arange(randint(1,5))
  print(a)
  b=np.arange(randint(5,10))
  print(b)
  sleep(1)
  print(np.concatenate((a,b)))
  sleep(1)
  s=[100,2,67,15,32,78]
  print(s)
  print(np.sort(s))
  sleep(1)
  d=np.reshape(s,newshape=(3,2))
  print(d)
  sleep(1)


def pandas_tack():
  s=pd.Series([i for i in range(2,randint(10,20))])
  print(s)
  print(s.head())
  print(s.tail())
  print(s.describe())
if __name__=="__main__":
    requests_tack()
    numpy_tack()
    pandas_tack()


#     С помощью данных библиотек базовый функционал Python был расширен в трех направлениях:

# - Работа с HTTP-запросами через requests.
# - Быстрая и эффективная обработка численных массивов с использованием numpy.
# - Интуитивно понятная обработка табличных данных и их анализ через pandas.

# Эти библиотеки обеспечивают удобство и производительность для задач, связанных с веб-разработкой, анализом данных и научными вычислениями.
    

    



