
# Задача "Асинхронные силачи":

# Необходимо сделать имитацию соревнований по поднятию шаров Атласа.

# Напишите асинхронную функцию start_strongman(name, power), где name - имя силача, power - его подъёмная мощность. 
# Реализуйте следующую логику в функции:

import asyncio


async def start_strongman(name:str, power:int):
    '''
    name - имя силача
    power - подъёмная мощность
    '''
    print(f'Силач {name} начал соревнования')
    ssleep=1/power
    for i in range(1,6):
        await asyncio.sleep(ssleep)
        print(f'Силач {'имя силача'} поднял {i}')
    print(f'Силач {name} закончил соревнования')
async def start_tournament():
    d=asyncio.create_task(start_strongman('Паша',5))
    t=asyncio.create_task(start_strongman('Петя',8))
    j=asyncio.create_task(start_strongman('Вася',9))
    await d
    await t
    await j
asyncio.run(start_tournament())







# В начале работы должна выводиться строка - 'Силач <имя силача> начал соревнования.'
# После должна выводиться строка - 'Силач <имя силача> поднял <номер шара>' с задержкой обратно пропорциональной его силе power. 
# Для каждого участника количество шаров одинаковое - 5.
# В конце поднятия всех шаров должна выводится строка 'Силач <имя силача> закончил соревнования.'
# Также напишите асинхронную функцию start_tournament, в которой создаются 3 задачи для функций start_strongman. 
# Имена(name) и силу(power) для вызовов функции start_strongman можете выбрать самостоятельно.

# После поставьте каждую задачу в ожидание (await).

# Запустите асинхронную функцию start_tournament методом run.



# Пример результата выполнения программы:

# Переданные аргументы в функции start_strongman:

# 'Pasha', 3

# 'Denis', 4

# 'Apollon', 5

# Вывод на консоль:

# Силач Pasha начал соревнования

# Силач Denis начал соревнования

# Силач Apollon начал соревнования

# Силач Apollon поднял 1 шар

# Силач Denis поднял 1 шар

# Силач Pasha поднял 1 шар

# Силач Apollon поднял 2 шар

# Силач Denis поднял 2 шар

# Силач Apollon поднял 3 шар

# Силач Pasha поднял 2 шар

# Силач Denis поднял 3 шар

# Силач Apollon поднял 4 шар

# Силач Pasha поднял 3 шар

# Силач Apollon поднял 5 шар

# Силач Apollon закончил соревнования

# Силач Denis поднял 4 шар

# Силач Denis поднял 5 шар

# Силач Denis закончил соревнования

# Силач Pasha поднял 4 шар

# Силач Pasha поднял 5 шар

# Силач Pasha закончил соревнования

# Примечания:

# Для обозначения асинхронной функции используйте оператор async.
# Для постановки задачи в режим ожидания используйте оператор await.
# Для задержки в асинхронной функции используйте функцию sleep из пакета asyncio.
# Для запуска асинхронной функции используйте функцию run из пакета asyncio.
